# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.9

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"


# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  - pip install poetry
  - poetry config http-basic.home $PYPI_USER $PYPI_PASSWORD
  - poetry install -v
  - export PYTHONPATH="$(pwd)/src:$(pwd)/src/horizons_web_service:$PYTHONPATH"

stages:
  - Static Analysis
  - Tests
  - Build Prep
  - Build
  - Deploy

Pylint:
  stage: Static Analysis
  script:
    - pylint -d C0301 src/horizons_web_service tests

Black:
  stage: Static Analysis
  script:
    - python -m black . --check --verbose

Unit:
  stage: Tests
  script:
    - pytest -v ./tests/unit
#
#Functional:
#  stage: Tests
#  script:
#    - pytest -v ./tests/functional

Build_Prep:
  stage: Build Prep
  script:
    - HORIZONS_API_VERSION=$(poetry version -s)
    - echo "$(poetry version -s)" > VERSION
  artifacts:
    paths:
      - VERSION

Build:
  stage: Build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  before_script: []
  dependencies:
    - Build_Prep
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"levan.home:5000\":{\"auth\":\"{}\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/src/docker/Dockerfile"
      --destination "levan.home:5000/horizons-api:${cat VERSION}"
      --build-arg PYPI_USER=$PYPI_USER
      --build-arg PYPI_PASSWORD=$PYPI_PASSWORD

Deploy:
  stage: Deploy
  image: alpine/helm:3.8.1
  before_script: []
  script:
    - helm upgrade horizons-api ./horizons-api --install --values=./horizons-api/values.yaml --namespace horizons
